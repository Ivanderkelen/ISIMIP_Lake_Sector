ratio_mm <-data$Dmax_Khazaei/data$Depth_avg
hist(ratio_mm)
hist(log10(ratio_mm))
data$Dmax_Khazaei_cone <- Dmax$Dmax_cone_m
dif_mm_cone <- data$Dmax_Khazaei_cone-data$Depth_avg
summary(dif_mm_cone)
summary(dif_mm)
hist(dif_mm)
hist(dif_mm)
hist(dif_mm_cone)
library(ncdf4) # package for netcdf manipulation
install.packages(c("ncdf4", "rgdal"))
library(foreign)
library(ncdf4) # package for netcdf manipulation
library(raster) # package for raster manipulation
library(rgdal) # package for geospatial analysis
library(ggplot2) # package for plotting
############ Testing hypsografics
nc_data <- nc_open('/home/rmarce/Cloud/a. WATExR/ISIMIP/ISIMIP Lake Sector Feb 2022 - ICRA PC/GLOBathy/GLOBathy_hAV_relationships.nc')
# Save the print(nc) dump to a text file
{
sink('gimms3g_ndvi_1982-2012_metadata.txt')
print(nc_data)
sink()
}
setwd("~/ISIMIP_Lake_Sector/Hypsographics/GLOBathy")
# Save the print(nc) dump to a text file
{
sink('gimms3g_ndvi_1982-2012_metadata.txt')
print(nc_data)
sink()
}
id <- ncvar_get(nc_data, "lake_id")
id
id <- ncvar_get(nc_data)
id <- ncvar_get(nc_data, "h")
id
id <- ncvar_get(nc_data, "h")
head(id)
head(id[,1:6])
head(id[,1:11])
head(id[1:11,1:11])
head(id[1:20,1:11])
(id[1:15,1:11])
(id[1:12,1:11])
(id[1:11,1:11])
Dmax_nc <- ncvar_get(nc_data, "lake_attributes")
Dmax_nc[1]
Dmax_nc[1:7,1:11]
Dmax_nc[1:5,1:11]
Dmax_nc[1:4,1:11]
V <- ncvar_get(nc_data, "V")
V[1:11,1:15]
A <- ncvar_get(nc_data, "A")
A[1:11,1:15]
A[1:12,1:15]
A[1:11,1:3]
Dmax_nc[1:4,1:11]
Dmax_nc[1:4,1:3]
V[1:11,1:3]
A[1:11,1:3]
V[1:11,1:3]/A[1:11,1:3]
V[11,1:3]/A[11,1:3]
V[11,1]/A[11,1]
V[11,1]/A[11,1]*1000
V[11,1:3]/A[11,1:3]*1000
A_Khazaei <- A[11,]
A[11,1:3]
A[11,1:3]
A_Khazaei <- A[11,]
V_Khazaei <- V[11,]
Dmax_Khazaei <- Dmax_nc[1,]
Dmean_Khazaei <-Dmax_nc[2,]
plot(data$Vol_total,V_Khazaei)
plot(data$Vol_total,V_Khazaei,log="xy")
A_Khazaei <- A[11,]*1000000
V_Khazaei <- V[11,]*1000000000
plot(data$Vol_total,V_Khazaei,log="xy")
abline(1,1)
plot(data$Vol_total,V_Khazaei,log="xy")
abline(1,1)
hist(log10(data$Vd))
plot(1,1)
newplot
figure
plot(c(1,1),c(2,2))
save.image(".RData")
plot(data$Vol_total,V_Khazaei,log="xy")
abline(1,1)
A_Khazaei <- A[11,]*1000000
V_Khazaei <- V[11,]*1000000000
plot(data$Vol_total,V_Khazaei,log="xy")
abline(1,1)
V_Khazaei <- V[11,]*1000000
plot(data$Vol_total,V_Khazaei,log="xy")
abline(1,1)
View(data)
plot(data$Lake_area,A_Khazaei,log="xy")
abline(1,1)
A_Khazaei <- A[11,]
plot(data$Lake_area,A_Khazaei,log="xy")
abline(1,1)
plot(data$Depth_avg,Dmean_Khazaei,log="xy")
abline(1,1)
V_Khazaei <- V[11,]*1000
plot(data$Vol_total,V_Khazaei,log="xy")
abline(1,1)
dif_area <- data$Lake_area-A_Khazaei
dif_area <- (data$Lake_area-A_Khazaei)/data$Lake_area*100
hist(dif_area)
which(dif_area==0)
dif_volume <- (data$Vol_total-V_Khazaei)/data$Vol_total*100
hist(dif_area)
hist(dif_volume)
which(dif_area==0)
dif_Dmean <- (data$Depth_avg-Dmean_Khazaei)/data$Depth_avg*100
hist(dif_Dmean)
which(dif_volume==0)
which(dif_Dmean==0)
hist(dif_volume)
hist((V_Khazaei/A_Khazaei*1000-Dmean_Khazaei)/Dmean_Khazaei*100)
head(Dmean_Khazaei)
hist((V_Khazaei/A_Khazaei-Dmean_Khazaei)/Dmean_Khazaei*100)
Vd_Khazaei  <- 3Dmean_Khazaei*/Dmax_Khazaei
Vd_Khazaei  <- 3*Dmean_Khazaei*/Dmax_Khazaei
Vd_Khazaei  <- 3*Dmean_Khazaei/Dmax_Khazaei
hist(log10(Vd_Khazaei))
hist((Vd_Khazaei))
summary(Vd_Khazaei)
load("~/Cloud/a. WATExR/ISIMIP/ISIMIP Lake Sector Feb 2022 - ICRA PC/GLOBathy/.RData")
hist(log10(ratio_mm))
hist(dif_mm)
hist(dif_mm_cone)
summary(dif_mm)
hist(dif_mm)
boxplot(dif_mm)
length(which(dif_mm<0))/length(dif_mm)*100
hist(log10(data$Lake_area[which(dif_mm<0)]))
summary(data$Lake_area[which(dif_mm<0)])
which(data$Lake_area==16717.890)
data[12,]
summary(ratio_mm)
boxplot(ratio_mm)
abline(0,1)
#checking outlier
which(ratio_mm>200)
data[8278,]
hist(log10(data$Vd))
length(which(data$Vd>3))/length(data$Vd)*100
r <- hist(log10(data$Vd))
plot(r)
# or alternatively:
barplot(r$counts, log="y", col="white", names.arg=r$breaks[-1])
summary(data$Vd)
log10(3)
quantile(data$Vd,0.98)
quantile(data$Vd,0.90)
quantile(data$Vd,0.975)
quantile(data$Vd,0.97)
quantile(data$Vd,0.95)
hist(log10(data$Vd))
boxplot(log10(data$Vd))
median(data$Vd)
quantile(data$Vd,0.95)
quantile(data$Vd,0.96)
quantile(data$Vd,0.95)
boxplot((data$Vd))
quantile(data$Vd,0)
quantile(data$Vd,0.05)
sqrt(0)
hist((Vd_Khazaei))
Vd_Khazaei  <- 3*Dmean_Khazaei/Dmax_Khazaei
hist((Vd_Khazaei))
summary(Vd_Khazaei)
hist(log10(data$Vd))
hist((data$Vd))
hist((data$Vd),xlim=c(0,3))
hist((data$Vd),xlim=c(0,3),breaks=seq(0,3,0.1))
hist((data$Vd),xlim=c(0,3),breaks=seq(min(data$Vd),max(data$Vd),0.1))
seq(min(data$Vd),max(data$Vd),0.1)
hist((data$Vd),xlim=c(0,3),breaks=seq(min(data$Vd),max(data$Vd),0.2))
hist((data$Vd),xlim=c(0,3),breaks=seq(min(data$Vd),max(data$Vd),1))
hist((data$Vd),xlim=c(0,3),breaks=100)
hist((data$Vd),xlim=c(0,3),breaks=200)
hist((data$Vd),xlim=c(0,3),breaks=300)
hist((data$Vd),xlim=c(0,3),breaks=400)
hist(dif_volume)
dif_volume <- (data$Vol_total-V_Khazaei)/data$Vol_total*100
hist(dif_volume)
which(dif_Dmean==0)
which(dif_volume==0)
which(dif_area==0)
dif_area <- (data$Lake_area-A_Khazaei)/data$Lake_area*100
hist(dif_area)
which(dif_area==0)
dif_area
plot(data$Vol_total,V_Khazaei,log="xy")
A_Khazaei <- A[11,]
V_Khazaei <- V[11,]*1000
Dmax_Khazaei <- Dmax_nc[1,]
Dmean_Khazaei <-Dmax_nc[2,]
abline(1,1)
V_Khazaei <- V[11,]/100000
plot(data$Vol_total,V_Khazaei,log="xy")
abline(1,1)
V_Khazaei <- V[11,]*10000
plot(data$Vol_total,V_Khazaei,log="xy")
abline(1,1)
plot(data$Lake_area,A_Khazaei,log="xy")
abline(1,1)
which(dif_area==0)
hist(dif_area)
A_Khazaei <- A[11,]
dif_area <- (data$Lake_area-A_Khazaei)/data$Lake_area*100
hist(dif_area)
sum(data$Vol_total)
sum(V_Khazaei)
V_Khazaei <- V[11,]*1000
sum(V_Khazaei)
save.image("~/Cloud/a. WATExR/ISIMIP/ISIMIP Lake Sector Feb 2022 - ICRA PC/GLOBathy/.RData")
sum(data$Lake_area)
sum(A_Khazaei)
hist((Vd_Khazaei))
hist((data$Vd),xlim=c(0,3),breaks=400)
#load HydroLakes polygons
data<-read.dbf("/home/rmarce/Cloud/a. WATExR/ISIMIP/Area_depth February 2022/Hydrolakes/HydroLAKES_polys_v10_shp/HydroLAKES_polys_v10.dbf")
library(foreign)
library(ncdf4) # package for netcdf manipulation
library(raster) # package for raster manipulation
library(rgdal) # package for geospatial analysis
library(ggplot2) # package for plotting
library(sf)
library(dplyr)
library(stars)
#load HydroLakes polygons
data<-read.dbf("/home/rmarce/Cloud/a. WATExR/ISIMIP/Area_depth February 2022/Hydrolakes/HydroLAKES_polys_v10_shp/HydroLAKES_polys_v10.dbf")
#load maximum depth (Dmax) from Khazaei et al. (2022)
Dmax <-read.csv("/home/rmarce/Cloud/a. WATExR/ISIMIP/ISIMIP Lake Sector Feb 2022 - ICRA PC/GLOBathy/GLOBathy_basic_parameters/GLOBathy_basic_parameters(ALL_LAKES).csv",header=T)
#checking order, sum must be zero
sum(data$Hylak_id-Dmax$Hylak_id)
#adding Dmax to Hydrolakes
data$Dmax_Khazaei <- Dmax$Dmax_use_m
data$Dmax_Khazaei_cone <- Dmax$Dmax_cone_m
#cheking ratios Dmax_Khazaei vs mean depth in Hydrolakes
ratio_mm <-data$Dmax_Khazaei/data$Depth_avg
summary(ratio_mm)
hist(log10(ratio_mm))
#with differences
dif_mm <- data$Dmax_Khazaei-data$Depth_avg
summary(dif_mm)
hist(dif_mm)
boxplot(dif_mm)
#now with the cone assumption
dif_mm_cone <- data$Dmax_Khazaei_cone-data$Depth_avg
summary(dif_mm_cone)
hist(dif_mm_cone)
length(which(dif_mm<0))/length(dif_mm)*100
hist(log10(data$Lake_area[which(dif_mm<0)]))
summary(data$Lake_area[which(dif_mm<0)])
hist(log10(ratio_mm))
plot(data$Dmax_Khazaei,data$Depth_avg,log="xy")
#cheking the volume development (should between 0 and 3)
data$Vd  <- 3*data$Depth_avg/data$Dmax_Khazaei
hist(log10(data$Vd))
hist((data$Vd),xlim=c(0,3),breaks=400)
length(which(data$Vd>3))/length(data$Vd)*100
quantile(data$Vd,0)
r <- hist(log10(data$Vd))
plot(r)
# or alternatively:
barplot(r$counts, log="y", col="white", names.arg=r$breaks[-1])
summary(data$Vd)
############ Testing hypsografics in Khazaei
nc_data <- nc_open('/home/rmarce/Cloud/a. WATExR/ISIMIP/ISIMIP Lake Sector Feb 2022 - ICRA PC/GLOBathy/GLOBathy_hAV_relationships.nc')
# Save the print(nc) dump to a text file
{
sink('gimms3g_ndvi_1982-2012_metadata.txt')
print(nc_data)
sink()
}
#load the depth index
id <- ncvar_get(nc_data, "h")
(id[1:11,1:11])
#load the lake attributes:
attri_nc <- ncvar_get(nc_data, "lake_attributes")
head(attri_nc)
attri_nc[1:4,1:3]
# collecting volume and Area of the hypsografics
V <- ncvar_get(nc_data, "V")
V[1:11,1:3]
A <- ncvar_get(nc_data, "A")
A[1:11,1:3]
V[11,1:3]/A[11,1:3]*1000
#Collecting mximum volume and area (in reality this is also stored in attri_nc)
A_Khazaei <- A[11,]
V[1:11,1:3]
attri_nc[1:4,1:3]
#Collecting mximum volume and area (in reality this is also stored in attri_nc)
A_Khazaei <- attri_nc[3,]
V_Khazaei <- attri_nc[4,]
V[1:11,1:3]
A <- ncvar_get(nc_data, "A")
A[1:11,1:3]
#comparing Hydrolakes and Khazaei volumes
plot(data$Vol_total,V_Khazaei,log="xy")
abline(log(1),1)
#comparing Hydrolakes and Khazaei areas
plot(data$Lake_area,A_Khazaei,log="xy")
abline(0,1)
abline(0,1)
#comparing Hydrolakes and Khazaei volumes. volume in hydrolakes is in 0.001 km3
plot(data$Vol_total*0.001,V_Khazaei,log="xy")
abline(0,1)
#comparing Hydrolakes and Khazaei mean depth
plot(data$Depth_avg,Dmean_Khazaei,log="xy")
abline(0,1)
#Collecting maximum volume and area, max and mean depth
A_Khazaei <- attri_nc[3,]
V_Khazaei <- attri_nc[4,]
Dmax_Khazaei <- attri_nc[1,]
Dmean_Khazaei <-attri_nc[2,]
#comparing Hydrolakes and Khazaei mean depth
plot(data$Depth_avg,Dmean_Khazaei,log="xy")
abline(0,1)
sum(data$Vol_total)
sum(V_Khazaei)
sum(data$Vol_total)*0.0001
sum(V_Khazaei)
sum(data$Vol_total)*0.001
sum(V_Khazaei)
sum(data$Lake_area)
sum(A_Khazaei)
(sum(V_Khazaei)-sum(data$Vol_total)*0.001)/(sum(data$Vol_total)*0.001)*100
(sum(A_Khazaei)-sum(data$Lake_area))/(sum(data$Lake_area))*100
#difference in total volum and area, in percent
(sum(V_Khazaei)-sum(data$Vol_total)*0.001)/(sum(data$Vol_total)*0.001)*100
(sum(A_Khazaei)-sum(data$Lake_area))/(sum(data$Lake_area))*100
#distribution of individual differences
dif_area <- (data$Lake_area-A_Khazaei)/data$Lake_area*100
hist(dif_area)
dif_volume <- (data$Vol_total*0.001-V_Khazaei)/(data$Vol_total*0.001)*100
hist(dif_volume)
dif_Dmean <- (data$Depth_avg-Dmean_Khazaei)/data$Depth_avg*100
hist(dif_Dmean)
hist((V_Khazaei/A_Khazaei-Dmean_Khazaei)/Dmean_Khazaei*100)
# volume development using data from Khazaei exclusively
Vd_Khazaei  <- 3*Dmean_Khazaei/Dmax_Khazaei
hist((Vd_Khazaei))
summary(Vd_Khazaei)
#recovering lakes ID from Khazaei databse
nc_lake_ID <- ncvar_get(nc_data, "lake_id")
dim(nc_lake_ID)
nc_lake_ID[1427688]
#loading the selected representative lakes for ISIMIP3
data_selected<-read.dbf("/home/rmarce/Cloud/a. WATExR/ISIMIP/ISIMIP Lake Sector Feb 2022 - ICRA PC/HL_selected.dbf")
head(data_selected$Hylak_id)
Dmax_nc
attri_nc_selected <- attri_nc[,data_selected$Hylak_id]
attri_nc_selected[,1:10]
dim(Dmax_nc_selected)
dim(attri_nc_selected)
A_Khazaei_selected <- attri_nc_selected[3,]
V_Khazaei_selected <- attri_nc_selected[4,]
Dmax_Khazaei_selected <- attri_nc_selected[1,]
Dmean_Khazaei_selected <-attri_nc_selected[2,]
Vd_Khazaei_selected  <- 3*Dmean_Khazaei_selected/Dmax_Khazaei_selected
hist((Vd_Khazaei_selected))
summary(Vd_Khazaei_selected)
summary(Vd_Khazaei)
#comparing with whole-database results
summary(Vd_Khazaei_selected)
summary(Vd_Khazaei)
plot(density(Vd_Khazaei), col="red")
lines(density(Vd_Khazaei_selected))
#comparing volumes with Hydrolakes for selected representative lakes
plot(data$Vol_total[data_selected$Hylak_id],V_Khazaei_selected,log="xy")
abline(0,1)
#comparing volumes with Hydrolakes for selected representative lakes
plot(data$Vol_total[data_selected$Hylak_id]*0.001,V_Khazaei_selected,log="xy")
abline(0,1)
plot(data$Lake_area[data_selected$Hylak_id],A_Khazaei_selected,log="xy")
abline(o,1)
abline(0,1)
plot(quantile(Vd_Khazaei,p=seq(0,1,0.01)),type="lo")
plot(quantile(Vd_Khazaei,p=seq(0,1,0.01)),type="x")
plot(quantile(Vd_Khazaei,p=seq(0,1,0.01)),type="l")
lines(quantile(Vd_Khazaei_selected,p=seq(0,1,0.01)), col="red")
plot(Dmax_Khazaei_selected,Vd_Khazaei_selected,log="x")
plot(Dmean_Khazaei_selected,Vd_Khazaei_selected,log="x")
plot(Dmax_Khazaei_selected,Vd_Khazaei_selected,log="x")
plot(A_Khazaei_selected,Vd_Khazaei_selected,log="x")
plot(V_Khazaei_selected,Vd_Khazaei_selected,log="x")
plot(A_Khazaei_selected,Dmean_Khazaei_selected, log="x")
raster_id_asmatrix <- as.matrix(raster_id)#to speed up
#loading lake_ID of representative lakes for reference to assign values to rasters
raster_id <- raster("/home/rmarce/ISIMIP_Lake_Sector/output/Hylak_id.tif")
raster_id_asmatrix <- as.matrix(raster_id)#to speed up
#initializing matrices
matrix_vd <- matrix(data = NA, nrow=360, ncol = 720) #empty matrix
matrix_A <- matrix(data = NA, nrow=360, ncol = 720) #empty matrix
matrix_V <- matrix(data = NA, nrow=360, ncol = 720) #empty matrix
matrix_Dmax <- matrix(data = NA, nrow=360, ncol = 720) #empty matrix
matrix_Dmean <- matrix(data = NA, nrow=360, ncol = 720) #empty matrix
#loop for assigning values in raters
for (i in 1:360){
for (j in 1:720){
print(i);print(j)
if (is.na(raster_id_asmatrix[i,j])) {}else{
position <- which(data_selected$Hylak_id == raster_id_asmatrix[i,j])
matrix_vd[i,j] <-  Vd_Khazaei_selected[position]
matrix_A[i,j] <-  A_Khazaei_selected[position]
matrix_V[i,j] <-  V_Khazaei_selected[position]
matrix_Dmax[i,j] <-  Dmax_Khazaei_selected[position]
matrix_Dmean[i,j] <-  Dmean_Khazaei_selected[position]
}
}
}
#loop for assigning values in the matrices
for (i in 1:360){
for (j in 1:720){
#print(i);print(j)
if (is.na(raster_id_asmatrix[i,j])) {#to avoid the loop crashing
}else{
#identifying which lake goes to the current position
position <- which(data_selected$Hylak_id == raster_id_asmatrix[i,j])
matrix_vd[i,j] <-  Vd_Khazaei_selected[position]
matrix_A[i,j] <-  A_Khazaei_selected[position]
matrix_V[i,j] <-  V_Khazaei_selected[position]
matrix_Dmax[i,j] <-  Dmax_Khazaei_selected[position]
matrix_Dmean[i,j] <-  Dmean_Khazaei_selected[position]
}
}
}
## converting to raster and writing data
Vd_raster <- raster(matrix_vd)
A_raster <- raster(matrix_A)
V_raster <- raster(matrix_V)
Dmax_raster <- raster(matrix_Dmax)
Dmean_raster <- raster(matrix_Dmean)
extent(Vd_raster) <- extent(c(-180,180,-90,90))
extent(A_raster) <- extent(c(-180,180,-90,90))
extent(V_raster) <- extent(c(-180,180,-90,90))
extent(Dmax_raster) <- extent(c(-180,180,-90,90))
extent(Dmean_raster) <- extent(c(-180,180,-90,90))
crs(Vd_raster) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
crs(A_raster) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
crs(V_raster) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
crs(Dmax_raster) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
crs(Dmean_raster) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
writeRaster(Vd_raster,"Vd_raster.tif", overwrite=T)
writeRaster(A_raster,"A_raster.tif", overwrite=T)
writeRaster(V_raster,"V_raster.tif", overwrite=T)
writeRaster(Dmax_raster,"Dmax_raster.tif", overwrite=T)
writeRaster(Dmean_raster,"Dmean_raster.tif", overwrite=T)
writeRaster(Vd_raster,"./Results/Vd_raster.tif", overwrite=T)
writeRaster(Vd_raster,"./Results/Vd_raster.tif", overwrite=T)
writeRaster(A_raster,"./Results/A_raster.tif", overwrite=T)
writeRaster(V_raster,"./Results/V_raster.tif", overwrite=T)
writeRaster(Dmax_raster,"./Results/Dmax_raster.tif", overwrite=T)
writeRaster(Dmean_raster,"./Results/Dmean_raster.tif", overwrite=T)
plot(Vd_raster.tif)
plot(Vd_raster)
plot(Dmax_raster)
plot(Vd_raster)
plot(Dmax_raster)
plot(Dmax_raster,log="z")
plot(Dmax_raster,log="xy")
plot(Dmax_raster,log="xyz")
plot(log(Dmax_raster))
plot(log(Dmax_raster)col="viridis")
plot(log(Dmax_raster),col="viridis")
library(viridis)
plot(log(Dmax_raster),col="viridis")
plot(log(Dmax_raster),col="red")
plot(log(Dmax_raster),col=c("viridis"))
plot(log(Dmax_raster))
plot(Vd_raster)
plot(Vd_raster,col="viridis")
plot(Vd_raster,col="heat.colors")
plot(Vd_raster,col="heat")
plot(Vd_raster,col=viridis)
plot(Vd_raster,col=viridis())
plot(Vd_raster,col=viridis(10))
plot(Vd_raster,col=viridis(20))
plot(Vd_raster,col=viridis(10))
plot(Vd_raster,col=viridis(5))
plot(Vd_raster,col=viridis(1))
plot(Vd_raster,col=viridis(2))
plot(Vd_raster,col=viridis(3))
plot(Vd_raster,col=viridis(4))
plot(Vd_raster,col=viridis(5))
plot(Vd_raster,col=viridis(2))
plot(log(Dmax_raster))
plot(log10(Dmax_raster))
plot(log10(Dmax_raster),col=viridis(2))
plot(log10(Dmax_raster),col=viridis(5))
plot(log10(Dmax_raster),col=viridis(10))
plot(log10(Dmax_raster),col=viridis(5))
plot(log10(Dmax_raster),col=viridis(2))
sum(V_raster-A_raster*Dmean_raster)
aa<-(V_raster-A_raster*Dmean_raster)
plot(aa)
aa<-(V_raster-A_raster*Dmean_raster*0.001)
plot(aa)
summary(aa)
hist(aa)
aa<-(V_raster/(A_raster*Dmean_raster*0.001))
summary(aa)
hist(aa)
bb<-(Vd_raster/(3*Dmean_raster/Dmax_raster))
summary(bb)
hist(bb)
